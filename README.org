* =org-drawer-list=

[[http://spacemacs.org][file:https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg]] [[https://circleci.com/gh/d12frosted/org-drawer-list][file:https://circleci.com/gh/d12frosted/org-drawer-list.svg?style=svg]]

Small utility library for dealing with lists in an =org-mode= drawer. This
library provides the following functions:

- =org-drawer-list= - returns the content of the named drawer as a list;
- =org-drawer-list-add= - adds the value to the list under the named drawer;
- =org-drawer-list-remove= - removes the value from the list under the named
  drawer;
- =org-drawer-list-block= - returns the region of the named drawer; when asked
  creates a missing drawer.

Every function works also in the agenda buffer.

Please refer to each function's documentation for more information.

** Projects using this library

- [[https://github.com/d12frosted/orgability][orgability]] - reading list manager for Emacs with offline access support

** User story

Imagine that you want to maintain a list of resources for each heading. One of
the possible ways to organise it is to use custom drawers.

#+BEGIN_SRC org
  ,* fancy topic
  :RESOURCES:
  - resource one
  - resource two
  :END:
#+END_SRC

Easy and straight-forward. But manually updating this list is tedious, because
manual work is tedious. And it doesn't scale. Especially if you wish to write a
program that leverages lists in custom drawers.

That's where =org-drawer-list= comes to the rescue!

*** Getting the list of resources

#+BEGIN_SRC emacs-lisp
  (org-drawer-list "resources")
  ;; => ("resource one" "resource two")
#+END_SRC

*** Adding resource

#+BEGIN_SRC emacs-lisp
  (org-drawer-list-add "resources" "resource three")
  ;; => "resource three"
#+END_SRC

#+BEGIN_SRC org
  ,* fancy topic
  :RESOURCES:
  - resource one
  - resource two
  - resource three
  :END:
#+END_SRC

*** Removing resource

#+BEGIN_SRC emacs-lisp
  (org-drawer-list-remove "resources" "resource three")
  ;; => 1
#+END_SRC

#+BEGIN_SRC org
  ,* fancy topic
  :RESOURCES:
  - resource one
  - resource two
  :END:
#+END_SRC

** Installation

Currently, this package is not available on MELPA, so you'll have to manually
install it.

*** =use-package= + =quelpa=

#+BEGIN_SRC emacs-lisp
  (use-package org-drawer-list
    :quelpa (org-drawer-list
             :fetcher github
             :repo "d12frosted/org-drawer-list"))
#+END_SRC

** Testing

Ideally, you should use [[http://cask.readthedocs.io/en/latest/][Cask]] for running tests. So first you need to install
=cask=. If you are using [[https://github.com/d12frosted/homebrew-emacs-plus][emacs-plus]], then you need to ignore dependencies during
=cask= installation.

#+BEGIN_SRC bash
  $ brew install cask --ignore-dependencies
#+END_SRC

One you have =cask=, you need to install all dependencies.

#+BEGIN_SRC bash
  $ cask install
#+END_SRC

Now you can run tests.

#+BEGIN_SRC bash
  $ cask exec ert-runner
#+END_SRC

** Contributing

Let me know if you have any issues, ideas or proposals. Pull requests are
welcome!
